{"ast":null,"code":"var _jsxFileName = \"/Users/junzhe/Desktop/studygeek/cs546-group1/studygeekreact/src/components/StudentList.js\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport StudentCard from './StudentCard';\nimport noImage from '../img/header.jpeg';\nimport SearchBar from './SearchBar';\n\nconst StudentList = () => {\n  const [searchData, setSearchData] = useState(undefined);\n  const [showsData, setShowsData] = useState(undefined);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  let li = null;\n  let img = null;\n  useEffect(() => {\n    console.log('render');\n\n    async function fetchData() {\n      if (searchTerm) {\n        const {\n          data\n        } = await axios.get('http://localhost:3008/students');\n        setSearchData(data);\n      } else {\n        try {\n          const {\n            data\n          } = await axios.get('http://localhost:3008/students');\n          setShowsData(data);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    }\n\n    fetchData();\n  }, [searchTerm]);\n\n  const searchValue = value => {\n    setSearchTerm(value);\n  }; // const buildListItem = (student) =>{\n  //     if (student.image & student.image.medium){\n  //         img = <img alt='student' src={student.image.medium} />\n  //     }else{\n  //         img = <img alt='student' src={noImage} />;\n  //     }\n  //     return (\n  //         <li key={student.id}>\n  //             <Link to={'/students/${student.id'}>\n  //                 {img} <br/>\n  //                 {student.name}\n  //             </Link>\n  //         </li>);\n  // }\n\n\n  if (searchTerm) {\n    li = searchData && searchData.map(students => {\n      let {\n        student\n      } = students;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: student.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/students/${student.id',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, img, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }), student.name));\n    });\n  } else {\n    li = showsData && showsData.map(student => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: student.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/students/${student.id',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, img, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }\n      }), student.name));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    searchValue: searchValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default StudentList;","map":{"version":3,"sources":["/Users/junzhe/Desktop/studygeek/cs546-group1/studygeekreact/src/components/StudentList.js"],"names":["axios","Link","React","useState","useEffect","StudentCard","noImage","SearchBar","StudentList","searchData","setSearchData","undefined","showsData","setShowsData","searchTerm","setSearchTerm","li","img","console","log","fetchData","data","get","e","searchValue","value","map","students","student","id","name"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport StudentCard from './StudentCard';\nimport noImage from '../img/header.jpeg';\nimport SearchBar from './SearchBar';\n\nconst StudentList =() => {\n    const [searchData, setSearchData] = useState(undefined);\n    const [showsData, setShowsData] = useState(undefined);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    let li = null;\n    let img = null;\n\n    useEffect(() => {\n        console.log('render');\n        async function fetchData(){\n            if (searchTerm) {\n                const { data } = await axios.get('http://localhost:3008/students');\n                setSearchData(data);\n            }else{\n                try{\n                    const { data } = await axios.get('http://localhost:3008/students');\n                    setShowsData(data);\n                }catch(e){\n                    console.log(e);\n                }\n            }\n        }\n        fetchData();\n    },[searchTerm]);\n\n    const searchValue = (value) => {\n        setSearchTerm(value)\n    };\n\n    // const buildListItem = (student) =>{\n    //     if (student.image & student.image.medium){\n    //         img = <img alt='student' src={student.image.medium} />\n    //     }else{\n    //         img = <img alt='student' src={noImage} />;\n    //     }\n    //     return (\n    //         <li key={student.id}>\n    //             <Link to={'/students/${student.id'}>\n    //                 {img} <br/>\n    //                 {student.name}\n    //             </Link>\n    //         </li>);\n    // }\n    \n    if (searchTerm){\n        li = searchData && searchData.map((students) => {\n            let { student } = students;\n            return (<li key={student.id}>\n            <Link to={'/students/${student.id'}>\n                {img} <br/>\n                {student.name}\n            </Link>\n        </li>);\n        })\n    }else{\n        li = showsData && showsData.map((student) => {\n            return   (<li key={student.id}>\n                <Link to={'/students/${student.id'}>\n                    {img} <br/>\n                    {student.name}\n                </Link>\n            </li>);\n        });\n    }\n    return (\n        <div >\n            <SearchBar searchValue={searchValue} />\n        </div>\n    )\n\n}\n\nexport default StudentList;\n"]},"metadata":{},"sourceType":"module"}