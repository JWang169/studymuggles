{"ast":null,"code":"var _jsxFileName = \"/Users/junzhe/Desktop/studygeek/cs546-group1/studygeekreact/src/components/MyAccount.js\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\n\nconst MyAccount = () => {\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [subjects, setSubjects] = useState(undefined);\n  const [info, setInfo] = useState(\"\");\n\n  const getAccount = async () => {\n    const tokenInfo = jwt_decode(localStorage.getItem(\"token\"));\n    const urlString = `http://localhost:3003/${tokenInfo.status}/${tokenInfo.statusId}`;\n\n    try {\n      const {\n        data\n      } = await axios.get(urlString);\n      setEmail(data.email);\n      setFirstName(data.firstName);\n      setLastName(data.lastName);\n      setSubjects(data.subjects);\n      setInfo(data.info);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getAccount();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, firstName, \"'s page.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Subjects: \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }), subjects && subjects.map(s => /*#__PURE__*/React.createElement(\"div\", {\n    key: Math.random() * 100000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, s.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"About Me: \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"I am a muggle.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, info))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Subjects: \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), subjects && subjects.map(s => /*#__PURE__*/React.createElement(\"div\", {\n    key: Math.random() * 100000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, s.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"About Me: \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"I am a muggle.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, info))));\n};\n\nexport default MyAccount;","map":{"version":3,"sources":["/Users/junzhe/Desktop/studygeek/cs546-group1/studygeekreact/src/components/MyAccount.js"],"names":["axios","React","useState","useEffect","jwt_decode","MyAccount","email","setEmail","firstName","setFirstName","lastName","setLastName","subjects","setSubjects","undefined","info","setInfo","getAccount","tokenInfo","localStorage","getItem","urlString","status","statusId","data","get","e","console","log","map","s","Math","random","name"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react'\nimport jwt_decode from \"jwt-decode\";\n\n\nconst MyAccount =() => {\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [subjects, setSubjects] = useState(undefined);\n    const [info, setInfo] = useState(\"\");\n    const getAccount = async() =>{\n        const tokenInfo = jwt_decode(localStorage.getItem(\"token\"));\n        const urlString = `http://localhost:3003/${tokenInfo.status}/${tokenInfo.statusId}`;\n        try{\n            const { data } = await axios.get(urlString);\n            setEmail(data.email);\n            setFirstName(data.firstName);\n            setLastName(data.lastName);\n            setSubjects(data.subjects);\n            setInfo(data.info);\n        }catch(e){\n            console.log(e)\n        }\n    };\n\n    useEffect(() => {\n        getAccount()\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <h1>{firstName}'s page.</h1>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <h2>Subjects: </h2>\n                    <hr/>\n                    {subjects && subjects.map(s => (\n                        <div key={Math.random() * 100000}>\n                            <p>{s.name}</p>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"col\">\n                    <h2>About Me: </h2>\n                    <hr/>\n                    <p>I am a muggle.</p>\n                    <p>{ info }</p>\n                    \n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <h2>Subjects: </h2>\n                    <hr/>\n                    {subjects && subjects.map(s => (\n                        <div key={Math.random() * 100000}>\n                            <p>{s.name}</p>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"col\">\n                    <h2>About Me: </h2>\n                    <hr/>\n                    <p>I am a muggle.</p>\n                    <p>{ info }</p>\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyAccount;\n"]},"metadata":{},"sourceType":"module"}