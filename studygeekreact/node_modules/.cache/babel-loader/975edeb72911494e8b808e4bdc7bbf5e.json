{"ast":null,"code":"var _jsxFileName = \"/Users/junzhe/Desktop/Study-Geeks/studygeekreact/src/components/TutorInfo.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\nimport UserContext from './context/UserContext';\n\nconst TutorInfo = props => {\n  console.log(props.match.params.id);\n  const {\n    token,\n    setToken\n  } = useContext(UserContext);\n  const [tokenInfo, setTokenInfo] = useState(\"\");\n  const history = useHistory();\n  useEffect(() => {\n    !token && history.push('/');\n    token && decodeToken(token) && getTutor();\n  }, []);\n\n  const decodeToken = token => {\n    try {\n      setTokenInfo(jwt_decode(localStorage.getItem(\"token\")));\n    } catch (e) {\n      setToken(\"\");\n    }\n  };\n\n  if (!token) {\n    console.log(\"no tokens\");\n    history.push('/login');\n  } // const tokenInfo = jwt_decode(localStorage.getItem(\"token\"));\n  // console.log(tokenInfo)\n\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subjects, setSubjects] = useState(\"\");\n  const [availability, setAvailability] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [town, setTown] = useState(\"\");\n  const [paired, setPaired] = useState(\"\");\n\n  const requestTutor = async (e, index) => {\n    e.preventDefault();\n\n    try {\n      console.log('http://localhost:3003/students/tutorPair/');\n      const reqInfo = {\n        tutorId: props.match.params.id,\n        studentId: tokenInfo.statusId,\n        subject: subjects[index].subjectName,\n        proficiency: subjects[index].proficiency\n      };\n      console.log(reqInfo);\n      const {\n        data\n      } = await axios.post('http://localhost:3003/students/tutorPair/', reqInfo);\n      console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getTutor = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:3003/tutors/' + props.match.params.id);\n      setLastName(data.lastName);\n      setFirstName(data.firstName);\n      setEmail(data.email);\n      setState(data.state);\n      setTown(data.town);\n      setSubjects(data.tutorSubjects);\n      setAvailability(data.availability); // console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, firstName, \"'s Page.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Subjects: \"), subjects && subjects.map((s, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: Math.random() * 100000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, \"Subject: \", s.subjectName), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, \"Proficiency: \", s.proficiency), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, \"Price: \", s.price), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, tokenInfo.status === 'students' && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ui positive button\",\n    onClick: e => requestTutor(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 75\n    }\n  }, \"Request Tutor\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Availability: \"), availability && availability.map(s => /*#__PURE__*/React.createElement(\"div\", {\n    key: Math.random() * 100000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, s.day, \", \", s.startH, \":\", s.startM, \" - \", s.endH, \":\", s.endM)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Contact Info: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"First name: \", firstName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"Last name: \", lastName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Email: \", email), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"State: \", state), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Town: \", town))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default TutorInfo;","map":{"version":3,"sources":["/Users/junzhe/Desktop/Study-Geeks/studygeekreact/src/components/TutorInfo.js"],"names":["React","useState","useContext","useEffect","axios","jwt_decode","useHistory","UserContext","TutorInfo","props","console","log","match","params","id","token","setToken","tokenInfo","setTokenInfo","history","push","decodeToken","getTutor","localStorage","getItem","e","firstName","setFirstName","lastName","setLastName","email","setEmail","subjects","setSubjects","availability","setAvailability","state","setState","town","setTown","paired","setPaired","requestTutor","index","preventDefault","reqInfo","tutorId","studentId","statusId","subject","subjectName","proficiency","data","post","get","tutorSubjects","map","s","Math","random","price","status","day","startH","startM","endH","endM"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\nimport UserContext from './context/UserContext';\n\nconst TutorInfo = (props) => {\n    console.log(props.match.params.id)\n    const {token, setToken} = useContext(UserContext);\n    const [tokenInfo, setTokenInfo] = useState(\"\");\n    const history = useHistory();\n\n    useEffect(() => {\n        !token && history.push('/') \n        token && decodeToken(token) && getTutor();\n    }, []);\n\n    const decodeToken = (token) => {\n        try{\n            setTokenInfo(jwt_decode(localStorage.getItem(\"token\")));\n        }catch(e){\n            setToken(\"\");\n        }\n        \n    }\n    if (!token){\n        console.log(\"no tokens\");\n        history.push('/login')\n    }\n    \n    // const tokenInfo = jwt_decode(localStorage.getItem(\"token\"));\n    // console.log(tokenInfo)\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [subjects, setSubjects] = useState(\"\");\n    const [availability, setAvailability] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [town, setTown] = useState(\"\");\n    const [paired, setPaired] = useState(\"\");\n    \n    const requestTutor = async(e, index)=>{\n        e.preventDefault();\n        try{\n            console.log('http://localhost:3003/students/tutorPair/')\n            const reqInfo = {\n                tutorId: props.match.params.id,\n                studentId : tokenInfo.statusId,\n                subject: subjects[index].subjectName,\n                proficiency: subjects[index].proficiency\n            }\n            console.log(reqInfo)\n            const { data } = await axios.post('http://localhost:3003/students/tutorPair/', reqInfo)\n            console.log(data)\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    const getTutor = async() => {\n        try{\n            const { data } = await axios.get('http://localhost:3003/tutors/' + props.match.params.id);\n            setLastName(data.lastName);\n            setFirstName(data.firstName);\n            setEmail(data.email);\n            setState(data.state);\n            setTown(data.town);\n            setSubjects(data.tutorSubjects)\n            setAvailability(data.availability)\n            // console.log(data);\n\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n\n    return (\n        <div className=\"container\">\n            <h1>{firstName}'s Page.</h1>\n            <br/>\n            <hr/>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <h2>Subjects: </h2>\n                    {subjects && subjects.map((s, index) => (\n                        <div key={Math.random() * 100000}>\n                                <h4>Subject: {s.subjectName}</h4>\n                                <h4>Proficiency: {s.proficiency}</h4>\n                                <h4>Price: {s.price}</h4>\n                                <div>{ tokenInfo.status === 'students' && <button className='ui positive button' onClick={(e) =>requestTutor(e, index)}>Request Tutor</button>}</div>                        \n                        </div>\n                    ))}               \n                </div>\n\n                <div className=\"col\">\n                    <h2>Availability: </h2>\n                    {availability && availability.map(s => (\n                        <div key={Math.random() * 100000}>\n                            <p>{s.day}, {s.startH}:{s.startM} - {s.endH}:{s.endM}</p>\n                        </div>\n                    ))}\n                </div>\n\n                <div className=\"col\">\n                    <h2>Contact Info: </h2>\n                    <div className=\"form-group\">First name: {firstName}</div>\n                    <div className=\"form-group\">Last name: {lastName}</div>\n                    <div className=\"form-group\">Email: {email}</div>\n                    <div className=\"form-group\">State: {state}</div>\n                    <div className=\"form-group\">Town: {town}</div>\n                </div>\n                \n            </div>    \n            <br/>\n        </div>\n    )\n\n};\n\nexport default TutorInfo\n"]},"metadata":{},"sourceType":"module"}