{"ast":null,"code":"var _jsxFileName = \"/Users/junzhe/Desktop/Study-Geeks/studygeekreact/src/components/TutorInfo.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\nimport UserContext from './context/UserContext';\n\nconst TutorInfo = props => {\n  console.log(\"this is from tutorinfo\" + props.match.params.id);\n  const {\n    token,\n    setToken\n  } = useContext(UserContext);\n  const [tokenInfo, setTokenInfo] = useState(\"\");\n  const history = useHistory();\n  useEffect(() => {\n    !token && history.push('/login');\n    token && getTutor();\n  }, []);\n\n  const decodeToken = () => {\n    try {\n      setTokenInfo(jwt_decode(localStorage.getItem(\"token\")));\n    } catch (e) {\n      setToken(\"\");\n    }\n  }; // if (!token){\n  //     console.log(\"no tokens\");\n  //     history.push('/login')\n  // }\n\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subjects, setSubjects] = useState(\"\");\n  const [availability, setAvailability] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [town, setTown] = useState(\"\");\n  const [reviews, setReviews] = useState([]);\n  const [score, setScore] = useState(\"\");\n  const [reviewContent, setReviewContent] = useState(\"\");\n  const [newScore, setNewScore] = useState(null);\n\n  const requestTutor = async (e, index) => {\n    e.preventDefault();\n\n    try {\n      const reqInfo = {\n        tutorId: props.match.params.id,\n        studentId: tokenInfo.statusId,\n        subject: subjects[index].subjectName,\n        proficiency: subjects[index].proficiency\n      };\n      const {\n        data\n      } = await axios.post('http://localhost:3003/students/tutorPair/', reqInfo);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getTutor = async () => {\n    console.log(\"GET TUTOR FUNC NOT WORKING\");\n    decodeToken();\n\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:3003/tutors/' + props.match.params.id);\n      setLastName(data.lastName);\n      setFirstName(data.firstName);\n      setEmail(data.email);\n      setState(data.state);\n      setTown(data.town);\n      setSubjects(data.tutorSubjects);\n      setAvailability(data.availability);\n      setScore(data.avgRating);\n      const {\n        r\n      } = await axios.get('http://localhost:3003/tutors/review/' + props.match.params.id);\n      setReviews(r); // console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  }; // rate tutor \n\n\n  const rateTutor = async event => {\n    event.preventDefault();\n\n    try {\n      const rateData = {\n        tutorId: props.match.params.id,\n        studentId: tokenInfo.statusId,\n        content: reviewContent,\n        rating: score\n      };\n      console.log(rateData);\n      const rateUrl = `http://localhost:3003/tutors/review`;\n      await axios.post(rateUrl, rateData);\n      history.push('/searchtutors');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, firstName, \"'s Page.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Subjects: \"), subjects && subjects.map((s, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: Math.random() * 100000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, \"Subject: \", s.subjectName), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, \"Proficiency: \", s.proficiency), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, \"Price: \", s.price), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, tokenInfo.status === 'students' && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ui positive button\",\n    onClick: e => requestTutor(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 75\n    }\n  }, \"Request Tutor\")))), tokenInfo.status === 'students' && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"default text\",\n    role: \"alert\",\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"Leave a comment\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"How was your class?\",\n    rows: \"3\",\n    name: 'review',\n    value: reviewContent,\n    onChange: e => setReviewContent(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"default text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Rate Your Tutor\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"5\",\n    name: 'score',\n    value: newScore,\n    onChange: e => setNewScore(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ui positive button\",\n    onClick: e => rateTutor(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \"Submit Rating\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Reviews: \"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"Average Rating: \", score), reviews && reviews.map(s => /*#__PURE__*/React.createElement(\"div\", {\n    key: Math.random() * 100000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, s.content)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"Availability: \"), availability && availability.map(s => /*#__PURE__*/React.createElement(\"div\", {\n    key: Math.random() * 100000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, s.day, \", \", s.startH, \":\", s.startM, \" - \", s.endH, \":\", s.endM)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, \"Contact Info: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, \"First name: \", firstName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, \"Last name: \", lastName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"Email: \", email), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, \"State: \", state), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, \"Town: \", town))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default TutorInfo;","map":{"version":3,"sources":["/Users/junzhe/Desktop/Study-Geeks/studygeekreact/src/components/TutorInfo.js"],"names":["React","useState","useContext","useEffect","axios","jwt_decode","useHistory","UserContext","TutorInfo","props","console","log","match","params","id","token","setToken","tokenInfo","setTokenInfo","history","push","getTutor","decodeToken","localStorage","getItem","e","firstName","setFirstName","lastName","setLastName","email","setEmail","subjects","setSubjects","availability","setAvailability","state","setState","town","setTown","reviews","setReviews","score","setScore","reviewContent","setReviewContent","newScore","setNewScore","requestTutor","index","preventDefault","reqInfo","tutorId","studentId","statusId","subject","subjectName","proficiency","data","post","get","tutorSubjects","avgRating","r","rateTutor","event","rateData","content","rating","rateUrl","map","s","Math","random","price","status","target","value","day","startH","startM","endH","endM"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\nimport UserContext from './context/UserContext';\n\nconst TutorInfo = (props) => {\n    console.log(\"this is from tutorinfo\" + props.match.params.id)\n    const {token, setToken} = useContext(UserContext);\n    const [tokenInfo, setTokenInfo] = useState(\"\");\n    const history = useHistory();\n    \n    useEffect(() => {\n        !token && history.push('/login') \n        token && getTutor();\n        \n    }, []);\n    \n    const decodeToken = () => {\n        try{\n            setTokenInfo(jwt_decode(localStorage.getItem(\"token\")));\n        }catch(e){\n            setToken(\"\");\n        }      \n    }\n    \n    // if (!token){\n    //     console.log(\"no tokens\");\n    //     history.push('/login')\n    // }\n    \n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [subjects, setSubjects] = useState(\"\");\n    const [availability, setAvailability] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [town, setTown] = useState(\"\");\n    const [reviews, setReviews] = useState([]);\n    const [score, setScore] = useState(\"\");\n    const [reviewContent, setReviewContent] = useState(\"\");\n    const [newScore, setNewScore] = useState(null);\n\n    const requestTutor = async(e, index)=>{\n        e.preventDefault();\n        try{\n            const reqInfo = {\n                tutorId: props.match.params.id,\n                studentId : tokenInfo.statusId,\n                subject: subjects[index].subjectName,\n                proficiency: subjects[index].proficiency\n            }\n            const { data } = await axios.post('http://localhost:3003/students/tutorPair/', reqInfo)\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    const getTutor = async() => {\n        console.log(\"GET TUTOR FUNC NOT WORKING\")\n        decodeToken();\n        try{\n            const { data } = await axios.get('http://localhost:3003/tutors/' + props.match.params.id);\n            setLastName(data.lastName);\n            setFirstName(data.firstName);\n            setEmail(data.email);\n            setState(data.state);\n            setTown(data.town);\n            setSubjects(data.tutorSubjects)\n            setAvailability(data.availability)\n            setScore(data.avgRating);\n            const {r}  = await axios.get('http://localhost:3003/tutors/review/' + props.match.params.id); \n            setReviews(r);\n            // console.log(data);\n\n        }catch(e){\n            console.log(e);\n        }\n    }\n    // rate tutor \n    const rateTutor = async(event) => {\n        event.preventDefault();\n        try{\n            const rateData = {\n                tutorId: props.match.params.id,\n                studentId: tokenInfo.statusId,\n                content: reviewContent,\n                rating: score \n            }\n            console.log(rateData)\n            const rateUrl = `http://localhost:3003/tutors/review`;\n            await axios.post(rateUrl, rateData)\n            history.push('/searchtutors');\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <h1>{firstName}'s Page.</h1>\n            <br/>\n            <hr/>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <h2>Subjects: </h2>\n                    {subjects && subjects.map((s, index) => (\n                        <div key={Math.random() * 100000}>\n                                <h4>Subject: {s.subjectName}</h4>\n                                <h4>Proficiency: {s.proficiency}</h4>\n                                <h4>Price: {s.price}</h4>\n                                <div>{ tokenInfo.status === 'students' && <button className='ui positive button' onClick={(e) =>requestTutor(e, index)}>Request Tutor</button>}</div>                        \n                        </div>\n                    ))}   \n                { tokenInfo.status === 'students' && <form className=\"ui form\">\n                    <div className=\"default text\" role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\">Leave a comment</div>\n                    <textarea \n                    placeholder=\"How was your class?\" \n                    rows=\"3\"         \n                    name={'review'}                            \n                    value={reviewContent}\n                    onChange={(e) => setReviewContent(e.target.value)}\n                    required/>\n                    <div className=\"default text\">Rate Your Tutor</div>\n                    <div className=\"ui input\">\n                        <input type=\"number\" \n                        placeholder=\"5\"\n                        name={'score'}     \n                        value={newScore}\n                        onChange={(e) => setNewScore(e.target.value)}\n                        required\n                        />\n                    </div>\n                    <button className=\"ui positive button\" onClick={(e) =>rateTutor(e)}>Submit Rating</button>  \n                    </form> }           \n                </div>\n\n   \n                \n\n                <div className=\"col\">\n                    <h2>Reviews: </h2>\n                    <h4>Average Rating: {score}</h4>\n                    {reviews && reviews.map(s => (\n                        <div key={Math.random() * 100000}>\n                            <p>{s.content}</p>\n                        </div>\n                    ))}               \n                </div>\n                <div className=\"col\">\n                    <h2>Availability: </h2>\n                    {availability && availability.map(s => (\n                        <div key={Math.random() * 100000}>\n                            <p>{s.day}, {s.startH}:{s.startM} - {s.endH}:{s.endM}</p>\n                        </div>\n                    ))}\n                </div>\n\n                <div className=\"col\">\n                    <h2>Contact Info: </h2>\n                    <div className=\"form-group\">First name: {firstName}</div>\n                    <div className=\"form-group\">Last name: {lastName}</div>\n                    <div className=\"form-group\">Email: {email}</div>\n                    <div className=\"form-group\">State: {state}</div>\n                    <div className=\"form-group\">Town: {town}</div>\n                </div>\n                \n            </div>    \n            <br/>\n        </div>\n    )\n\n};\n\nexport default TutorInfo\n"]},"metadata":{},"sourceType":"module"}